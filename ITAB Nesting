*&---------------------------------------------------------------------*
*& Report ZK_TEMP1
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT zk_temp1.

CLASS zcl_itab_nesting DEFINITION.

  PUBLIC SECTION.

    TYPES: BEGIN OF artists_type,
             artist_id   TYPE string,
             artist_name TYPE string,
           END OF artists_type.
    TYPES artists TYPE STANDARD TABLE OF artists_type WITH KEY artist_id.
    TYPES: BEGIN OF albums_type,
             artist_id  TYPE string,
             album_id   TYPE string,
             album_name TYPE string,
           END OF albums_type.
    TYPES albums TYPE STANDARD TABLE OF albums_type WITH KEY artist_id album_id.
    TYPES: BEGIN OF songs_type,
             artist_id TYPE string,
             album_id  TYPE string,
             song_id   TYPE string,
             song_name TYPE string,
           END OF songs_type.
    TYPES songs TYPE STANDARD TABLE OF songs_type WITH KEY artist_id album_id song_id.


    TYPES: BEGIN OF song_nested_type,
             song_id   TYPE string,
             song_name TYPE string,
           END OF song_nested_type.
    TYPES: BEGIN OF album_song_nested_type,
             album_id   TYPE string,
             album_name TYPE string,
             songs      TYPE STANDARD TABLE OF song_nested_type WITH KEY song_id,
           END OF album_song_nested_type.
    TYPES: BEGIN OF artist_album_nested_type,
             artist_id   TYPE string,
             artist_name TYPE string,
             albums      TYPE STANDARD TABLE OF album_song_nested_type WITH KEY album_id,
           END OF artist_album_nested_type.
    TYPES nested_data TYPE STANDARD TABLE OF artist_album_nested_type WITH KEY artist_id.

    METHODS perform_nesting
      IMPORTING
        artists            TYPE artists
        albums             TYPE albums
        songs              TYPE songs
      RETURNING
        VALUE(nested_data) TYPE nested_data.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS zcl_itab_nesting IMPLEMENTATION.

  METHOD perform_nesting.

    nested_data = VALUE #( FOR wa_artist IN artists (
                           artist_id = wa_artist-artist_id
                           artist_name = wa_artist-artist_name )
                          ).

    LOOP AT nested_data ASSIGNING FIELD-SYMBOL(<fs_nested>).

      LOOP AT albums INTO DATA(wa_albums) WHERE artist_id = <fs_nested>-artist_id.
        APPEND VALUE #( album_id = wa_albums-album_id album_name = wa_albums-album_name ) TO <fs_nested>-albums.
      ENDLOOP.
      LOOP AT <fs_nested>-albums ASSIGNING FIELD-SYMBOL(<fs_albums>).

        LOOP AT songs INTO DATA(wa_songs) WHERE artist_id = <fs_nested>-artist_id AND album_id = <fs_albums>-album_id.
          APPEND VALUE #( song_id = wa_songs-song_id song_name = wa_songs-song_name ) TO <fs_albums>-songs.
        ENDLOOP.

      ENDLOOP.
    ENDLOOP.

  ENDMETHOD.

ENDCLASS.


START-OF-SELECTION.

  TYPES: BEGIN OF artists_type,
           artist_id   TYPE string,
           artist_name TYPE string,
         END OF artists_type.
  DATA : artists TYPE STANDARD TABLE OF artists_type WITH KEY artist_id.
  TYPES: BEGIN OF albums_type,
           artist_id  TYPE string,
           album_id   TYPE string,
           album_name TYPE string,
         END OF albums_type.
  DATA : albums TYPE STANDARD TABLE OF albums_type WITH KEY artist_id album_id.
  TYPES: BEGIN OF songs_type,
           artist_id TYPE string,
           album_id  TYPE string,
           song_id   TYPE string,
           song_name TYPE string,
         END OF songs_type.
  DATA : songs TYPE STANDARD TABLE OF songs_type WITH KEY artist_id album_id song_id.


  artists = VALUE #( ( artist_id = '1' artist_name = 'Godsmack' )
                     ( artist_id = '2' artist_name = 'Shinedown' ) ).

  albums = VALUE #(
                    ( artist_id = '1' album_id = '1' album_name = 'Faceless' )
                    ( artist_id = '1' album_id = '2' album_name = 'When Lengends Rise' )
                    ( artist_id = '2' album_id = '1' album_name = 'The Sound of Madness' )
                    ( artist_id = '2' album_id = '2' album_name = 'Planet Zero' )
                  ).
  songs = VALUE #(
                   ( artist_id = '1' album_id = '1' song_id = '1' song_name = 'Straight Out Of Line' )
                   ( artist_id = '1' album_id = '1' song_id = '2' song_name = 'Changes' )
                   ( artist_id = '1' album_id = '2' song_id = '1' song_name = 'Bullet Proof' )
                   ( artist_id = '1' album_id = '2' song_id = '2' song_name = 'Under Your Scars' )
                   ( artist_id = '2' album_id = '1' song_id = '1' song_name = 'Second Chance' )
                   ( artist_id = '2' album_id = '1' song_id = '2' song_name = 'Breaking Inside' )
                   ( artist_id = '2' album_id = '2' song_id = '1' song_name = 'Dysfunctional You' )
                   ( artist_id = '2' album_id = '2' song_id = '2' song_name = 'Daylight' )
                 ).

  DATA(lo_nesting) = NEW zcl_itab_nesting( ).

  DATA(li_nesting) = lo_nesting->perform_nesting(
                       artists = artists
                       albums  = albums
                       songs   = songs
                     ).
